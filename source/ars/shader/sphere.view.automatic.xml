<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
   <!--=====================================================-->
   <State name='fill_mode'   value='Face'/>
   <State name='cull_mode'   value='Front'/>
   <State name='depth_mode'  value='LessEqual'/>
   <State name='depth_write' value='Y'/>
   <State name='blend_mode'  value='N' source='SrcAlpha' target='OneMinusSrcAlpha'/>
   <State name='alpha_test'  value='N'/>
   <!--=====================================================-->
   <Option name='shadow'   value='N'/>
   <Option name='lightmap' value='N'/>
   <Option name='fog'      value='N'/>
   <!--=====================================================-->
   <Parameter name='vc_const'    format='Float4'/>
   <Parameter name='fc_const'    format='Float4'/>
   <!--=====================================================-->
   <Attribute name='va_position' linker='position' format='Float4'/>
   <Attribute name='va_coord'    linker='coord'    format='Float2'/>
   <!--=====================================================-->
   <Sampler name='fs_diffuse'    linker='diffuse'/>
   <Sampler name='fs_radian'     linker='radian'/>
   <!-- http://www.geekcome.com/content-10-3840-1.html -->
   <!-- http://blog.sina.com.cn/s/blog_6084f5880101dpxl.html -->
   <!--=====================================================-->
   <Source name='vertex'><![CDATA[
      //..........................................................
      // 常量定义
      uniform vec4 vc_const;
      //..........................................................
      // 属性流声明
      attribute vec2 va_position;
      attribute vec2 va_coord;
      //..........................................................
      // 属性流声明
      varying vec2 v_position;
      varying vec2 v_coord;
      //..........................................................
      // 处理
      void main(){
         // 计算最终坐标
         gl_Position = vec4(va_position.x * vc_const.x, va_position.y * vc_const.y, 0.0, 1.0);
         // 设置位置
         v_position = va_position;
         // 设置纹理
         v_coord = va_coord;
      }
   ]]></Source>
   <Source name='fragment'><![CDATA[
      // 声明环境
      #ifdef GL_ES
      precision highp float;
      #endif
      //..........................................................
      // 常量定义
      uniform vec4 fc_const;
      //..........................................................
      // 声明插值器
      varying vec2 v_position;
      varying vec2 v_coord;
      //..........................................................
      // 声明取样器
      uniform sampler2D fs_diffuse;
      uniform sampler2D fs_radian;
      //..........................................................
      // 处理
      void main(void){
         vec2 position = vec2(v_position.x, v_position.y);
         position.y += 0.4;
         vec2 direction = normalize(position);
         float angle = acos(direction.x) / 3.1415926 / 2.0;
         float cx = 0.0;
         if(sign(direction.y) == -1.0){
            cx = 0.5 - angle;
         }else{
            cx = 0.5 + angle;
         }
         cx += fc_const.w;
         float cy = 1.0 - sqrt(position.x * position.x + position.y * position.y);
         vec4 color = texture2D(fs_diffuse, vec2(cx, cy));
         gl_FragColor = vec4(color.rgb, 1.0);
         //gl_FragColor = vec4(cx, cx, cx, 1.0);
         //gl_FragColor = vec4(cy, cy, cy, 1.0);
         //gl_FragColor = texture2D(fs_diffuse, v_coord);
         //gl_FragColor = texture2D(fs_radian, v_coord);
         //gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);
      }
   ]]></Source>
</Configuration>
