<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
   <!--=====================================================-->
   <State name='fill_mode'   value='Face'/>
   <State name='cull_mode'   value='Front'/>
   <State name='depth_mode'  value='LessEqual'/>
   <State name='depth_write' value='Y'/>
   <State name='blend_mode'  value='Y' source='SrcAlpha' target='OneMinusSrcAlpha'/>
   <State name='alpha_test'  value='N'/>
   <!--=====================================================-->
   <Option name='shadow'   value='N'/>
   <Option name='lightmap' value='N'/>
   <Option name='fog'      value='N'/>
   <!--=====================================================-->
   <Parameter name='vc_position' format='Float4'/>
   <!--=====================================================-->
   <Attribute name='va_position' linker='position' format='Float4'/>
   <Attribute name='va_coord'    linker='coord'    format='Float2'/>
   <!--=====================================================-->
   <Sampler name='fs_diffuse'    linker='diffuse'/>
   <!--=====================================================-->
   <Source name='vertex'><![CDATA[
      //..........................................................
      // 变换矩阵声明
      uniform vec4 vc_position;
      //..........................................................
      // 属性流声明
      attribute vec3 va_position;
      attribute vec2 va_coord;
      //..........................................................
      // 属性流声明
      varying vec2 v_coord;
      //..........................................................
      // 处理
      void main(){
         // 计算模型坐标
         vec4 position = vec4(0.0, 0.0, 0.0, 1.0);
         position.xy = va_position.xy * vc_position.zw;
         position.xy += vc_position.xy;
         // 计算最终坐标
         gl_Position = position;
         //gl_Position = vec4(position.y, -position.x, 0.0, 1.0);
         // 设置纹理
         v_coord = va_coord;
      }
   ]]></Source>
   <Source name='fragment'><![CDATA[
      // 声明环境
      #ifdef GL_ES
      precision mediump float;
      #endif
      //..........................................................
      // 声明插值器
      varying vec2 v_coord;
      //..........................................................
      // 声明取样器
      uniform sampler2D fs_diffuse;
      //..........................................................
      // 处理
      void main(void){
         //............................................................
         // 计算环境颜色
         vec4 result = texture2D(fs_diffuse, v_coord);
         //............................................................
         gl_FragColor = result;
      }
   ]]></Source>
</Configuration>
