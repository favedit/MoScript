<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
   <!--=====================================================-->
   <State name='fill_mode'   value='Face'/>
   <State name='cull_mode'   value='Front'/>
   <State name='depth_mode'  value='LessEqual'/>
   <State name='depth_write' value='Y'/>
   <State name='blend_mode'  value='N'/>
   <State name='alpha_test'  value='N'/>
   <!--=====================================================-->
   <Option name='shadow'   value='N'/>
   <Option name='lightmap' value='N'/>
   <Option name='fog'      value='N'/>
   <!--=====================================================-->
   <Parameter name='vc_model_matrix' format='Float4x4'/>
   <Parameter name='vc_vp_matrix'    format='Float4x4'/>
   <Parameter name='vc_offset'       format='Float4'/>
   <Parameter name='fc_index'        format='Float4'/>
   <!--=====================================================-->
   <Attribute name='va_position'     linker='position' format='Float4'/>
   <Attribute name='va_coord'        linker='coord'    format='Float2'/>
   <!--=====================================================-->
   <Sampler name='fs_diffuse'        linker='diffuse'/>
   <!--=====================================================-->
   <Source name='vertex'><![CDATA[
      //..........................................................
      // 变换矩阵声明
      uniform mat4 vc_model_matrix;
      uniform mat4 vc_vp_matrix;
      uniform vec4 vc_offset;
      //..........................................................
      // 属性流声明
      attribute vec3 va_position;
      <shader:true source='vertex.attribute.coord'>
      attribute vec2 va_coord;
      </shader:true>
      //..........................................................
      // 属性流声明
      <shader:true source='vertex.attribute.coord'>
      varying vec2 v_coord;
      </shader:true>
      //..........................................................
      // 处理
      void main(){
         // 计算模型坐标
         vec4 modelPosition = vec4(va_position, 1.0) * vc_model_matrix;
         vec4 position = modelPosition * vc_vp_matrix;
         // 计算偏移
         position.xy = (vc_offset.zw * position.ww + position.xy) * vc_offset.xy;
         // 计算最终坐标
         gl_Position = position;
         // 设置纹理
         <shader:true source='vertex.attribute.coord'>
         v_coord = va_coord;
         </shader:true>
      }
   ]]></Source>
   <Source name='fragment'><![CDATA[
      // 声明环境
      #ifdef GL_ES
      precision highp float;
      #endif
      //..........................................................
      // 声明常量
      uniform vec4 fc_index;
      //..........................................................
      // 声明插值器
      varying vec4 v_position;
      <shader:true source='vertex.attribute.coord'>
      varying vec2 v_coord;
      </shader:true>
      //..........................................................
      // 声明取样器
      <shader:true source='support.ambient.sampler'>
      uniform sampler2D fs_diffuse;
      </shader:true>
      //..........................................................
      // 处理
      void main(void){
         //............................................................
         // 计算环境颜色
         <shader:true source='support.ambient.sampler'>
         vec4 color = texture2D(fs_diffuse, v_coord);
         if(color.a < fc_index.w){
            discard;
         }
         </shader:true>
         //............................................................
         gl_FragColor = fc_index;
      }
   ]]></Source>
</Configuration>
